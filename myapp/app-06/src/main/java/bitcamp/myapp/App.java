/*
 * This source file was generated by the Gradle 'init' task
 */
package bitcamp.myapp;

import java.util.InputMismatchException;

public class App {
    public static void main(String[] args) {
        java.io.InputStream keyboard = System.in;
        java.util.Scanner keyboardScanner = new java.util.Scanner(keyboard);

        String boldAnsi = "\033[1m";
        String redAnsi = "\033[31m";
        String resetAnsi = "\033[0m";
        String appTitle = "[팀 프로젝트 관리 시스템]";
        String line = "----------------------------------------";

        // 배열 저장
        String[] menus = new String[] {
                "회원",
                "팀",
                "프로젝트",
                "게시판",
                "도움말",
                "종료"
        };

        System.out.println(boldAnsi + line + resetAnsi);
        System.out.println(boldAnsi + appTitle + resetAnsi);

        for (int i = 0; i < menus.length; i++) {
            if (menus[i] == "종료") {
                System.out.printf("%s%d. %s%s\n", (boldAnsi + redAnsi), (i + 1), menus[i], resetAnsi);
            } else {
                System.out.printf("%d. %s\n", (i + 1), menus[i]);
            }
        }

        System.out.println(boldAnsi + appTitle + resetAnsi);

        int menuNo;

        while(true) {
            // 예외가 발생했을 때 멈추지 않고 계속 실행하게 만드는 문법. try ~ catch
            try {
                System.out.print("> ");
                menuNo = keyboardScanner.nextInt(); // try 안에 있어야 함. 밖에 있으니 while 문 무한루프 오류

                if (menuNo >= 1 && menuNo <= menus.length) {
                    if (menus[menuNo - 1] == "종료"){
                        // 종료 메뉴일 때 반복문을 나간다.
                        break;
                    }
                    System.out.println(menus[menuNo - 1]);
                } else {
                    // 여기서 예외를 던지면 catch에서 받음.
                    // 예외 던지기 throw new Exception()
                    // throw new Exception("유효한 메뉴 번호가 아닙니다.");
                    // throw new InputMismatchException();

                    System.out.println("유효한 메뉴 번호가 아닙니다.");
                }
            } catch (InputMismatchException e) {
                System.out.println("숫자로 메뉴 번호를 입력하세요.");
                keyboardScanner.next(); // 오류를 제거하기 위함. 변수에 담지 않는다는 뜻.

                // break를 하면 scanner.next()를 안하고 while 문을 빠져나가서 바로 종료.
                // 반복문을 빠져나가는 것이 아닌 그냥 입력으로 유지하고 싶다면 scanner.next()을 해줘야함.
                // 그렇지 않으면 catch 문이 무한 실행됨.
            }
        }

        // 종료하면 어차피 반복문을 나오니까.
        System.out.println("종료합니다.");

        // 사용을 완료한 자원은 반환해야 다른 프로세스(프로그램)이 사용할 수 있다.
        // 단, JVM을 종료하면 JVM이 사용한 모든 자원은 강제 회수된다.
        // OS가 강제 회수한다.
        keyboardScanner.close();
    }
}
