/*
 * This source file was generated by the Gradle 'init' task
 */
package bitcamp.myapp;

import java.util.Scanner;

public class App {

    //    java.io.InputStream keyboard = System.in;
    // import
    static Scanner keyboardScanner = new Scanner(System.in);

    // 배열 저장
    static String[] mainMenus = new String[] {"회원", "팀", "프로젝트", "게시판", "도움말", "종료"};

    static String[][] subMenus = {
            {"등록a", "목록", "조회", "변경", "삭제"},
            {"등록b", "목록", "조회", "변경", "삭제"},
            {"등록c", "목록", "조회", "변경", "삭제"},
            {"등록d", "목록", "조회", "변경", "삭제"},
    };

    public static void main(String[] args) {

        printMenu(); // 메서드에 묶인 코드를 메서드를 실행하는 것을 "메서드를 호출(call)한다"라고 부른다.

        String command;

        while(true) {
            try {
                command = prompt("메인");

                if (command.equals("menu")) {
                    printMenu();
                } else {
                    int menuNo = Integer.parseInt(command); // 문자열을 int 값으로 바꿈.
                    String menuTitle = getMenuTitle(menuNo, mainMenus); // 설명하는 변수

                    if (menuTitle == null) {
                        System.out.println("유효한 메뉴 번호가 아닙니다.");
                    } else if (menuTitle.equals("종료")) {
                        break;
                    } else {
                        if (menuNo >= 1 && menuNo <= 4) {
                            processMenu(menuTitle, subMenus[menuNo -1]);
                        } else {
                            System.out.println(menuTitle);
                        }
                    }
                }

            } catch (NumberFormatException e) {
                System.out.println("숫자로 메뉴 번호를 입력하세요.");
            }
        }

        // 종료하면 어차피 반복문을 나오니까.
        System.out.println("종료합니다.");

        keyboardScanner.close();
    }

    static void printMenu() {
        String boldAnsi = "\033[1m";
        String redAnsi = "\033[31m";
        String resetAnsi = "\033[0m";
        String appTitle = "[팀 프로젝트 관리 시스템]";
        String line = "----------------------------------------";

        System.out.println(boldAnsi + line + resetAnsi);
        System.out.println(boldAnsi + appTitle + resetAnsi);

        for (int i = 0; i < mainMenus.length; i++) {
            if (mainMenus[i].equals("종료")) {
                System.out.printf("%s%d. %s%s\n", (boldAnsi + redAnsi), (i + 1), mainMenus[i], resetAnsi);
            } else {
                System.out.printf("%d. %s\n", (i + 1), mainMenus[i]);
            }
        }

        System.out.println(boldAnsi + line + resetAnsi);
    }

    static void printSubMenu(String menuTitle, String[] menus) {
        System.out.printf("[%s]\n", menuTitle);
        for (int i = 0; i < menus.length; i++) {
            System.out.printf("%d. %s\n", (i + 1), menus[i]);
        }
        System.out.println("9. 이전");
    }

    static String prompt(String title) {
        System.out.printf("%s> ", title);
        return keyboardScanner.nextLine();
    }

    static boolean isValidateMenu(int menuNo, String[] menus) {
        return menuNo >= 1 && menuNo <= menus.length;
    }

    static String getMenuTitle(int menuNo, String[] menus) {
        /*if (isValidateMenu(menuNo)) {
            return menus[menuNo -1];
        }
        return null;*/

        return isValidateMenu(menuNo, menus) ? menus[menuNo -1] : null;
    }

    static void processMenu(String menuTitle, String[] menus) {
        printSubMenu(menuTitle, menus);

        while (true) {
            String command = prompt("메인/" + menuTitle); // 변수 따로 씀.

            if (command.equals("menu")) {
                printSubMenu(menuTitle, menus);
                continue;
            } else if (command.equals("9")) { // 이전 메뉴 선택
                break;
            }

            try {
                int menuNo = Integer.parseInt(command);
                String subMenuTitle = getMenuTitle(menuNo, menus);
                if (subMenuTitle == null) {
                    System.out.println("유효한 메뉴 번호가 아닙니다.");
                } else {
                    System.out.println(subMenuTitle);
                }
            } catch (NumberFormatException e) {
                System.out.println("숫자로 메뉴 번호를 입력하세요.");
            }
        }
    }

    /*static String getSubMenuTitle(int menuNo, String[] menus) {
        return menuNo < 1 || menuNo > menus.length ? null : menus[menuNo - 1];
    }*/
}
